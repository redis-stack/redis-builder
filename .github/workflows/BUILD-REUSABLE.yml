name: Build and Publish

on:
  workflow_call:
    inputs:

      # docker image for compiling redis
      docker_image:
        required: true
        type: string

      # short version of the OS (ubuntu20.04, rhel7, etc)
      osnick:
        required: true
        type: string

      deps:
        required: true
        type: string

      ##### optioanl inputs #####

      # architecture
      arch:
        required: false
        type: string
        default: x86_64

      osname:
        required: false
        type: string
        default: Linux

      build_script:
        required: false
        type: string
        default: build.sh

jobs:

   build:
    runs-on: ubuntu-latest
    container: ${{inputs.docker_image}}

    steps:
    - name: install dependencies
      run: ${{inputs.deps}}

    - name: determine if in fork
      id: iamafork                                                                                                                                              
      run: |
        amfork=`jq '.pull_request.head.repo.fork' $GITHUB_EVENT_PATH`
        echo "am I fork: ${amfork}"
        echo "IAMAFORK=$amfork" >> $GITHUB_OUTPUT

    - uses: actions/checkout@v3
      with:
        path: redis-builder

    - name: load envvars
      uses: c-py/action-dotenv-to-setenv@v5
      id: get_config_versions
      with:
        env-file: redis-builder/vars

    - name: check if already built
      id: redis-already-built
      continue-on-error: true
      run: |
        wget -q ${{steps.get_config_versions.outputs.HTTPS3BASE}}/redis-${{steps.get_config_versions.outputs.PACKAGEDREDISVERSION}}-${{inputs.osnick}}-${{inputs.arch}}.tgz

    - uses: actions/checkout@v3
      if: steps.redis-already-built.outcome != 'success'
      with:
        repository: redis/redis
        path: redis
        ref: ${{steps.get_config_versions.outputs.VERSION}}

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          /var/cache/apt/archives/**.deb
          /var/cache/yum
        key: cache-${{hashFiles('.github/workflows/*.yml')}}-${{inputs.arch}}-build

    - name: make
      if: steps.redis-already-built.outcome != 'success'
      run: bash redis-builder/${{inputs.build_script}}

    - name: package redis for s3
      if: steps.redis-already-built.outcome != 'success'
      run: |
        mkdir redis-${{steps.get_config_versions.outputs.VERSION}}-${{inputs.osnick}}-${{inputs.arch}}
        cp redis/src/redis-server \
           redis/src/redis-sentinel \
           redis/src/redis-check-aof \
           redis/src/redis-check-rdb \
           redis/src/redis-benchmark \
           redis/src/redis-cli \
           redis-${{steps.get_config_versions.outputs.PACKAGEDREDISVERSION}}-${{inputs.osnick}}-${{inputs.arch}}
        tar -czvf redis-${{steps.get_config_versions.outputs.PACKAGEDREDISVERSION}}-${{inputs.osnick}}-${{inputs.arch}}.tgz \
           redis-${{steps.get_config_versions.outputs.PACKAGEDREDISVERSION}}-${{inputs.osnick}}-${{inputs.arch}}
    - name: install s3cmd
      if: steps.redis-already-built.outcome != 'success'
      run: |
        pip3 install s3cmd

    - name: persist redis to s3
      if: steps.redis-already-built.outcome != 'success' && steps.iamafork.outputs.IAMAFORK == 'false'
      run: |
        s3cmd --access_key=${{secrets.AWS_ACCESS_KEY_ID}} --secret_key=${{secrets.AWS_SECRET_ACCESS_KEY}} --region=us-east-1 put -P redis-${{steps.get_config_versions.outputs.PACKAGEDREDISVERSION}}-${{inputs.osname}}-${{inputs.osnick}}-${{inputs.arch}}.tgz \
          ${{steps.get_config_versions.outputs.S3BASE}}/redis-${{steps.get_config_versions.outputs.PACKAGEDREDISVERSION}}-${{inputs.osnick}}-${{inputs.arch}}.tgz

    - name: perist redis
      if: steps.redis-already-built.outcome != 'success'
      uses: actions/upload-artifact@v3
      with:
        name: redis-${{steps.get_config_versions.outputs.PACKAGEDREDISVERSION}}-${{inputs.arch}}
        path: |
          redis/src/redis-server
          redis/src/redis-sentinel
          redis/src/redis-check-aof
          redis/src/redis-check-rdb
          redis/src/redis-benchmark
          redis/src/redis-cli